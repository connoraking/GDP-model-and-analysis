{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bc9fc17f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Region/Country/Area</th>\n",
       "      <th>Unnamed: 1</th>\n",
       "      <th>Year</th>\n",
       "      <th>Series</th>\n",
       "      <th>Value</th>\n",
       "      <th>Footnotes</th>\n",
       "      <th>Source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>1995</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>31,269,041</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Nations Statistics Division, New York, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2005</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>47,775,404</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Nations Statistics Division, New York, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2010</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>66,578,017</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Nations Statistics Division, New York, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2015</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>75,283,835</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Nations Statistics Division, New York, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2019</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>87,728,744</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Nations Statistics Division, New York, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Region/Country/Area                     Unnamed: 1  Year  \\\n",
       "0                    1  Total, all countries or areas  1995   \n",
       "1                    1  Total, all countries or areas  2005   \n",
       "2                    1  Total, all countries or areas  2010   \n",
       "3                    1  Total, all countries or areas  2015   \n",
       "4                    1  Total, all countries or areas  2019   \n",
       "\n",
       "                                           Series       Value Footnotes  \\\n",
       "0  GDP in current prices (millions of US dollars)  31,269,041       NaN   \n",
       "1  GDP in current prices (millions of US dollars)  47,775,404       NaN   \n",
       "2  GDP in current prices (millions of US dollars)  66,578,017       NaN   \n",
       "3  GDP in current prices (millions of US dollars)  75,283,835       NaN   \n",
       "4  GDP in current prices (millions of US dollars)  87,728,744       NaN   \n",
       "\n",
       "                                              Source  \n",
       "0  United Nations Statistics Division, New York, ...  \n",
       "1  United Nations Statistics Division, New York, ...  \n",
       "2  United Nations Statistics Division, New York, ...  \n",
       "3  United Nations Statistics Division, New York, ...  \n",
       "4  United Nations Statistics Division, New York, ...  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df_gdp = pd.read_csv('E:\\\\Career\\\\Projects\\\\Data-Driven GDP Analysis\\\\data\\\\gdp.csv', encoding='ISO-8859-1')\n",
    "\n",
    "df_gdp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4f7ea407",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 1</th>\n",
       "      <th>Year</th>\n",
       "      <th>Series</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>1995</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>31,269,041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2005</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>47,775,404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2010</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>66,578,017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2015</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>75,283,835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2019</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>87,728,744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6770</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6771</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6772</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6773</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6774</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6775 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Unnamed: 1  Year  \\\n",
       "0     Total, all countries or areas  1995   \n",
       "1     Total, all countries or areas  2005   \n",
       "2     Total, all countries or areas  2010   \n",
       "3     Total, all countries or areas  2015   \n",
       "4     Total, all countries or areas  2019   \n",
       "...                             ...   ...   \n",
       "6770                       Zimbabwe  2010   \n",
       "6771                       Zimbabwe  2015   \n",
       "6772                       Zimbabwe  2019   \n",
       "6773                       Zimbabwe  2020   \n",
       "6774                       Zimbabwe  2021   \n",
       "\n",
       "                                              Series       Value  \n",
       "0     GDP in current prices (millions of US dollars)  31,269,041  \n",
       "1     GDP in current prices (millions of US dollars)  47,775,404  \n",
       "2     GDP in current prices (millions of US dollars)  66,578,017  \n",
       "3     GDP in current prices (millions of US dollars)  75,283,835  \n",
       "4     GDP in current prices (millions of US dollars)  87,728,744  \n",
       "...                                              ...         ...  \n",
       "6770              GDP real rates of growth (percent)        19.7  \n",
       "6771              GDP real rates of growth (percent)         1.8  \n",
       "6772              GDP real rates of growth (percent)        -6.1  \n",
       "6773              GDP real rates of growth (percent)        -5.3  \n",
       "6774              GDP real rates of growth (percent)         6.3  \n",
       "\n",
       "[6775 rows x 4 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dropping Columns\n",
    "df_gdp = df_gdp.drop(columns = ['Footnotes', 'Source', 'Region/Country/Area'])\n",
    "df_gdp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "03128ab1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>Series</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>1995</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>31,269,041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2005</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>47,775,404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2010</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>66,578,017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2015</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>75,283,835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2019</td>\n",
       "      <td>GDP in current prices (millions of US dollars)</td>\n",
       "      <td>87,728,744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6770</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6771</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6772</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6773</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6774</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>GDP real rates of growth (percent)</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6775 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            country  year  \\\n",
       "0     Total, all countries or areas  1995   \n",
       "1     Total, all countries or areas  2005   \n",
       "2     Total, all countries or areas  2010   \n",
       "3     Total, all countries or areas  2015   \n",
       "4     Total, all countries or areas  2019   \n",
       "...                             ...   ...   \n",
       "6770                       Zimbabwe  2010   \n",
       "6771                       Zimbabwe  2015   \n",
       "6772                       Zimbabwe  2019   \n",
       "6773                       Zimbabwe  2020   \n",
       "6774                       Zimbabwe  2021   \n",
       "\n",
       "                                              Series       Value  \n",
       "0     GDP in current prices (millions of US dollars)  31,269,041  \n",
       "1     GDP in current prices (millions of US dollars)  47,775,404  \n",
       "2     GDP in current prices (millions of US dollars)  66,578,017  \n",
       "3     GDP in current prices (millions of US dollars)  75,283,835  \n",
       "4     GDP in current prices (millions of US dollars)  87,728,744  \n",
       "...                                              ...         ...  \n",
       "6770              GDP real rates of growth (percent)        19.7  \n",
       "6771              GDP real rates of growth (percent)         1.8  \n",
       "6772              GDP real rates of growth (percent)        -6.1  \n",
       "6773              GDP real rates of growth (percent)        -5.3  \n",
       "6774              GDP real rates of growth (percent)         6.3  \n",
       "\n",
       "[6775 rows x 4 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Renaming Unamed: 1 \n",
    "\n",
    "df_gdp = df_gdp.rename(columns = {'Unnamed: 1':'country',\n",
    "                                 'Year': 'year'})\n",
    "df_gdp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "df0a11d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>Series</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>1995</td>\n",
       "      <td>gdp</td>\n",
       "      <td>31,269,041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2005</td>\n",
       "      <td>gdp</td>\n",
       "      <td>47,775,404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2010</td>\n",
       "      <td>gdp</td>\n",
       "      <td>66,578,017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2015</td>\n",
       "      <td>gdp</td>\n",
       "      <td>75,283,835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Total, all countries or areas</td>\n",
       "      <td>2019</td>\n",
       "      <td>gdp</td>\n",
       "      <td>87,728,744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6770</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6771</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6772</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6773</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6774</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6775 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            country  year           Series       Value\n",
       "0     Total, all countries or areas  1995              gdp  31,269,041\n",
       "1     Total, all countries or areas  2005              gdp  47,775,404\n",
       "2     Total, all countries or areas  2010              gdp  66,578,017\n",
       "3     Total, all countries or areas  2015              gdp  75,283,835\n",
       "4     Total, all countries or areas  2019              gdp  87,728,744\n",
       "...                             ...   ...              ...         ...\n",
       "6770                       Zimbabwe  2010  gdp_growth_rate        19.7\n",
       "6771                       Zimbabwe  2015  gdp_growth_rate         1.8\n",
       "6772                       Zimbabwe  2019  gdp_growth_rate        -6.1\n",
       "6773                       Zimbabwe  2020  gdp_growth_rate        -5.3\n",
       "6774                       Zimbabwe  2021  gdp_growth_rate         6.3\n",
       "\n",
       "[6775 rows x 4 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# renaming values\n",
    "\n",
    "df_gdp['Series'] = df_gdp['Series'].replace({\n",
    "    'GDP in current prices (millions of US dollars)': 'gdp',\n",
    "    'GDP real rates of growth (percent)': 'gdp_growth_rate'\n",
    "})\n",
    "\n",
    "df_gdp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "401accb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>Series</th>\n",
       "      <th>Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>840</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1995</td>\n",
       "      <td>gdp</td>\n",
       "      <td>2,757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>841</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2005</td>\n",
       "      <td>gdp</td>\n",
       "      <td>6,221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>842</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2010</td>\n",
       "      <td>gdp</td>\n",
       "      <td>14,699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>843</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>gdp</td>\n",
       "      <td>18,713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>844</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2019</td>\n",
       "      <td>gdp</td>\n",
       "      <td>18,904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6770</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6771</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6772</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6773</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6774</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>gdp_growth_rate</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5935 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          country  year           Series   Value\n",
       "840   Afghanistan  1995              gdp   2,757\n",
       "841   Afghanistan  2005              gdp   6,221\n",
       "842   Afghanistan  2010              gdp  14,699\n",
       "843   Afghanistan  2015              gdp  18,713\n",
       "844   Afghanistan  2019              gdp  18,904\n",
       "...           ...   ...              ...     ...\n",
       "6770     Zimbabwe  2010  gdp_growth_rate    19.7\n",
       "6771     Zimbabwe  2015  gdp_growth_rate     1.8\n",
       "6772     Zimbabwe  2019  gdp_growth_rate    -6.1\n",
       "6773     Zimbabwe  2020  gdp_growth_rate    -5.3\n",
       "6774     Zimbabwe  2021  gdp_growth_rate     6.3\n",
       "\n",
       "[5935 rows x 4 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Removing the region observations, all before Afghanistan\n",
    "\n",
    "afghan_index = df_gdp[df_gdp['country'] == 'Afghanistan'].index[0] # first index that matches the condition\n",
    "\n",
    "df_gdp = df_gdp.loc[afghan_index: ]\n",
    "df_gdp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9daf804b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "country    0\n",
       "year       0\n",
       "Series     0\n",
       "Value      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking NAs\n",
    "df_gdp.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "79f857ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Series</th>\n",
       "      <th>GDP in constant 2015 prices (millions of US dollars)</th>\n",
       "      <th>GDP per capita (US dollars)</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Afghanistan</th>\n",
       "      <th>1995</th>\n",
       "      <td>6,335</td>\n",
       "      <td>168</td>\n",
       "      <td>2,757</td>\n",
       "      <td>30.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>9,596</td>\n",
       "      <td>255</td>\n",
       "      <td>6,221</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>14,744</td>\n",
       "      <td>521</td>\n",
       "      <td>14,699</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>18,713</td>\n",
       "      <td>554</td>\n",
       "      <td>18,713</td>\n",
       "      <td>-1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>20,510</td>\n",
       "      <td>501</td>\n",
       "      <td>18,904</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Zimbabwe</th>\n",
       "      <th>2010</th>\n",
       "      <td>14,100</td>\n",
       "      <td>938</td>\n",
       "      <td>12,042</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>19,963</td>\n",
       "      <td>1,410</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>20,705</td>\n",
       "      <td>1,472</td>\n",
       "      <td>22,595</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>19,608</td>\n",
       "      <td>1,383</td>\n",
       "      <td>21,665</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>20,843</td>\n",
       "      <td>1,508</td>\n",
       "      <td>24,118</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1485 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series           GDP in constant 2015 prices (millions of US dollars)  \\\n",
       "country     year                                                        \n",
       "Afghanistan 1995                                              6,335     \n",
       "            2005                                              9,596     \n",
       "            2010                                             14,744     \n",
       "            2015                                             18,713     \n",
       "            2019                                             20,510     \n",
       "...                                                             ...     \n",
       "Zimbabwe    2010                                             14,100     \n",
       "            2015                                             19,963     \n",
       "            2019                                             20,705     \n",
       "            2020                                             19,608     \n",
       "            2021                                             20,843     \n",
       "\n",
       "Series           GDP per capita (US dollars)     gdp gdp_growth_rate  \n",
       "country     year                                                      \n",
       "Afghanistan 1995                         168   2,757            30.5  \n",
       "            2005                         255   6,221             7.5  \n",
       "            2010                         521  14,699             5.2  \n",
       "            2015                         554  18,713            -1.4  \n",
       "            2019                         501  18,904             3.9  \n",
       "...                                      ...     ...             ...  \n",
       "Zimbabwe    2010                         938  12,042            19.7  \n",
       "            2015                       1,410  19,963             1.8  \n",
       "            2019                       1,472  22,595            -6.1  \n",
       "            2020                       1,383  21,665            -5.3  \n",
       "            2021                       1,508  24,118             6.3  \n",
       "\n",
       "[1485 rows x 4 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Pivoting so that gdp and gdp_growth_rate are their own columns\n",
    "df_gdp_hierarchical = df_gdp.pivot_table(index = ['country', 'year'], columns = 'Series', values = 'Value', aggfunc = 'first')\n",
    "#df_gdp_pivot.reset_index(inplace = True)\n",
    "df_gdp_hierarchical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1c9b860f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Series</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Afghanistan</th>\n",
       "      <th>1995</th>\n",
       "      <td>6,335</td>\n",
       "      <td>168</td>\n",
       "      <td>2,757</td>\n",
       "      <td>30.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>9,596</td>\n",
       "      <td>255</td>\n",
       "      <td>6,221</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>14,744</td>\n",
       "      <td>521</td>\n",
       "      <td>14,699</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>18,713</td>\n",
       "      <td>554</td>\n",
       "      <td>18,713</td>\n",
       "      <td>-1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>20,510</td>\n",
       "      <td>501</td>\n",
       "      <td>18,904</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Zimbabwe</th>\n",
       "      <th>2010</th>\n",
       "      <td>14,100</td>\n",
       "      <td>938</td>\n",
       "      <td>12,042</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>19,963</td>\n",
       "      <td>1,410</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>20,705</td>\n",
       "      <td>1,472</td>\n",
       "      <td>22,595</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>19,608</td>\n",
       "      <td>1,383</td>\n",
       "      <td>21,665</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>20,843</td>\n",
       "      <td>1,508</td>\n",
       "      <td>24,118</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1485 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series           gdp_usa_price_2015 gdp_per_capita     gdp gdp_growth_rate\n",
       "country     year                                                          \n",
       "Afghanistan 1995              6,335            168   2,757            30.5\n",
       "            2005              9,596            255   6,221             7.5\n",
       "            2010             14,744            521  14,699             5.2\n",
       "            2015             18,713            554  18,713            -1.4\n",
       "            2019             20,510            501  18,904             3.9\n",
       "...                             ...            ...     ...             ...\n",
       "Zimbabwe    2010             14,100            938  12,042            19.7\n",
       "            2015             19,963          1,410  19,963             1.8\n",
       "            2019             20,705          1,472  22,595            -6.1\n",
       "            2020             19,608          1,383  21,665            -5.3\n",
       "            2021             20,843          1,508  24,118             6.3\n",
       "\n",
       "[1485 rows x 4 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# dropping the constant 2015 prices\n",
    "df_gdp_hierarchical.rename(columns = {'GDP in constant 2015 prices (millions of US dollars)':'gdp_usa_price_2015',\n",
    "                              'GDP per capita (US dollars)': 'gdp_per_capita'},\n",
    "                          inplace = True)\n",
    "\n",
    "df_gdp_hierarchical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b00ae30b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Series</th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1995</td>\n",
       "      <td>6,335</td>\n",
       "      <td>168</td>\n",
       "      <td>2,757</td>\n",
       "      <td>30.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2005</td>\n",
       "      <td>9,596</td>\n",
       "      <td>255</td>\n",
       "      <td>6,221</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2010</td>\n",
       "      <td>14,744</td>\n",
       "      <td>521</td>\n",
       "      <td>14,699</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>18,713</td>\n",
       "      <td>554</td>\n",
       "      <td>18,713</td>\n",
       "      <td>-1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2019</td>\n",
       "      <td>20,510</td>\n",
       "      <td>501</td>\n",
       "      <td>18,904</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1480</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>14,100</td>\n",
       "      <td>938</td>\n",
       "      <td>12,042</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1,410</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1482</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>20,705</td>\n",
       "      <td>1,472</td>\n",
       "      <td>22,595</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>19,608</td>\n",
       "      <td>1,383</td>\n",
       "      <td>21,665</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1484</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>20,843</td>\n",
       "      <td>1,508</td>\n",
       "      <td>24,118</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1485 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series      country  year gdp_usa_price_2015 gdp_per_capita     gdp  \\\n",
       "0       Afghanistan  1995              6,335            168   2,757   \n",
       "1       Afghanistan  2005              9,596            255   6,221   \n",
       "2       Afghanistan  2010             14,744            521  14,699   \n",
       "3       Afghanistan  2015             18,713            554  18,713   \n",
       "4       Afghanistan  2019             20,510            501  18,904   \n",
       "...             ...   ...                ...            ...     ...   \n",
       "1480       Zimbabwe  2010             14,100            938  12,042   \n",
       "1481       Zimbabwe  2015             19,963          1,410  19,963   \n",
       "1482       Zimbabwe  2019             20,705          1,472  22,595   \n",
       "1483       Zimbabwe  2020             19,608          1,383  21,665   \n",
       "1484       Zimbabwe  2021             20,843          1,508  24,118   \n",
       "\n",
       "Series gdp_growth_rate  \n",
       "0                 30.5  \n",
       "1                  7.5  \n",
       "2                  5.2  \n",
       "3                 -1.4  \n",
       "4                  3.9  \n",
       "...                ...  \n",
       "1480              19.7  \n",
       "1481               1.8  \n",
       "1482              -6.1  \n",
       "1483              -5.3  \n",
       "1484               6.3  \n",
       "\n",
       "[1485 rows x 6 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Re-converting back to a flat dataframe instead of hierarchical indexing for easier analysis in the future with machine learning\n",
    "df_gdp_final = df_gdp_hierarchical.reset_index()\n",
    "df_gdp_final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5e16a5f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: Bolivia (Plurin. State of) - \"Invalid Country Name: 'Bolivia (Plurin. State of)'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Hong Kong SAR - \"Invalid Country Name: 'China, Hong Kong SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: China, Macao SAR - \"Invalid Country Name: 'China, Macao SAR'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: CÃ´te dÂ’Ivoire - \"Invalid Country Name: 'CÃ´te d\\x92Ivoire'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. People's Rep. Korea - \"Invalid Country Name: 'Dem. People's Rep. Korea'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Dem. Rep. of the Congo - \"Invalid Country Name: 'Dem. Rep. of the Congo'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Iran (Islamic Republic of) - \"Invalid Country Name: 'Iran (Islamic Republic of)'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Lao People's Dem. Rep. - \"Invalid Country Name: 'Lao People's Dem. Rep.'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Micronesia (Fed. States of) - \"Invalid Country Name: 'Micronesia (Fed. States of)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands (Kingdom of the) - \"Invalid Country Name: 'Netherlands (Kingdom of the)'\"\n",
      "Error processing country: Netherlands Antilles [former] - \"Invalid Country Name: 'Netherlands Antilles [former]'\"\n",
      "Error processing country: Netherlands Antilles [former] - \"Invalid Country Name: 'Netherlands Antilles [former]'\"\n",
      "Error processing country: Netherlands Antilles [former] - \"Invalid Country Name: 'Netherlands Antilles [former]'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Republic of Korea - \"Invalid Country Name: 'Republic of Korea'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: Sint Maarten (Dutch part) - \"Invalid Country Alpha-2 code: 'SX'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: United Rep. of Tanzania - \"Invalid Country Name: 'United Rep. of Tanzania'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Venezuela (Boliv. Rep. of) - \"Invalid Country Name: 'Venezuela (Boliv. Rep. of)'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\connor\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pycountry\\db.py:51: UserWarning: Country's official_name not found. Country name provided instead.\n",
      "  warnings.warn(warning_message, UserWarning)\n",
      "c:\\users\\connor\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pycountry\\db.py:51: UserWarning: Country's common_name not found. Country name provided instead.\n",
      "  warnings.warn(warning_message, UserWarning)\n"
     ]
    }
   ],
   "source": [
    "import pycountry_convert as pc\n",
    "\n",
    "def get_continent(country_name):\n",
    "    try:\n",
    "        # Make sure country_name is a string, not a Series or DataFrame\n",
    "        assert isinstance(country_name, str), f\"Input must be str, got {type(country_name)}\"\n",
    "        \n",
    "        country_code = pc.country_name_to_country_alpha2(country_name)\n",
    "        continent_code = pc.country_alpha2_to_continent_code(country_code)\n",
    "        continent_name = pc.convert_continent_code_to_continent_name(continent_code)\n",
    "        return continent_name\n",
    "    except Exception as e:\n",
    "        print(f\"Error processing country: {country_name} - {e}\")\n",
    "        # Return None or you could specify a default value, e.g., 'Unknown'\n",
    "        return None\n",
    "\n",
    "# Apply get_continent function row-wise using apply with axis=1\n",
    "df_test = df_gdp_final\n",
    "df_test['continent'] = df_gdp_final['country'].apply(get_continent)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5495d857",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Series</th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "      <th>continent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1995</td>\n",
       "      <td>6,335</td>\n",
       "      <td>168</td>\n",
       "      <td>2,757</td>\n",
       "      <td>30.5</td>\n",
       "      <td>Asia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2005</td>\n",
       "      <td>9,596</td>\n",
       "      <td>255</td>\n",
       "      <td>6,221</td>\n",
       "      <td>7.5</td>\n",
       "      <td>Asia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2010</td>\n",
       "      <td>14,744</td>\n",
       "      <td>521</td>\n",
       "      <td>14,699</td>\n",
       "      <td>5.2</td>\n",
       "      <td>Asia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>18,713</td>\n",
       "      <td>554</td>\n",
       "      <td>18,713</td>\n",
       "      <td>-1.4</td>\n",
       "      <td>Asia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2019</td>\n",
       "      <td>20,510</td>\n",
       "      <td>501</td>\n",
       "      <td>18,904</td>\n",
       "      <td>3.9</td>\n",
       "      <td>Asia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1480</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>14,100</td>\n",
       "      <td>938</td>\n",
       "      <td>12,042</td>\n",
       "      <td>19.7</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2015</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1,410</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1.8</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1482</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2019</td>\n",
       "      <td>20,705</td>\n",
       "      <td>1,472</td>\n",
       "      <td>22,595</td>\n",
       "      <td>-6.1</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2020</td>\n",
       "      <td>19,608</td>\n",
       "      <td>1,383</td>\n",
       "      <td>21,665</td>\n",
       "      <td>-5.3</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1484</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2021</td>\n",
       "      <td>20,843</td>\n",
       "      <td>1,508</td>\n",
       "      <td>24,118</td>\n",
       "      <td>6.3</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1469 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series      country  year gdp_usa_price_2015 gdp_per_capita     gdp  \\\n",
       "0       Afghanistan  1995              6,335            168   2,757   \n",
       "1       Afghanistan  2005              9,596            255   6,221   \n",
       "2       Afghanistan  2010             14,744            521  14,699   \n",
       "3       Afghanistan  2015             18,713            554  18,713   \n",
       "4       Afghanistan  2019             20,510            501  18,904   \n",
       "...             ...   ...                ...            ...     ...   \n",
       "1480       Zimbabwe  2010             14,100            938  12,042   \n",
       "1481       Zimbabwe  2015             19,963          1,410  19,963   \n",
       "1482       Zimbabwe  2019             20,705          1,472  22,595   \n",
       "1483       Zimbabwe  2020             19,608          1,383  21,665   \n",
       "1484       Zimbabwe  2021             20,843          1,508  24,118   \n",
       "\n",
       "Series gdp_growth_rate continent  \n",
       "0                 30.5      Asia  \n",
       "1                  7.5      Asia  \n",
       "2                  5.2      Asia  \n",
       "3                 -1.4      Asia  \n",
       "4                  3.9      Asia  \n",
       "...                ...       ...  \n",
       "1480              19.7    Africa  \n",
       "1481               1.8    Africa  \n",
       "1482              -6.1    Africa  \n",
       "1483              -5.3    Africa  \n",
       "1484               6.3    Africa  \n",
       "\n",
       "[1469 rows x 7 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Renaming and Removing Countries\n",
    "\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Bolivia (Plurin. State of)', 'Bolivia')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('China, Hong Kong SAR', 'Hong Kong')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('China, Macao SAR', 'Macao')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('CÃ´te d\\x92Ivoire', 'Ivory Coast')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace(\"Dem. People's Rep. Korea\", 'North Korea')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace(\"Dem. Rep. of the Congo\", 'Democratic Republic of the Congo')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Iran (Islamic Republic of)', 'Iran')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Micronesia (Fed. States of)', 'Micronesia')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Netherlands (Kingdom of the)', 'Netherlands')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Republic of Korea', 'South Korea')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('United Rep. of Tanzania', 'Tanzania')\n",
    "df_gdp_final['country'] = df_gdp_final['country'].replace('Venezuela (Boliv. Rep. of)', 'Venezuela')\n",
    "\n",
    "countries_to_remove = [\"Lao People's Dem. Rep.\", 'Netherlands Antilles [former]', 'Sint Maarten (Dutch part)']\n",
    "df_removal = df_gdp_final[~df_gdp_final['country'].isin(countries_to_remove)]\n",
    "df_removal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ab492400",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Kosovo - \"Invalid Country Name: 'Kosovo'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: Saint Vincent & Grenadines - \"Invalid Country Name: 'Saint Vincent & Grenadines'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: State of Palestine - \"Invalid Country Name: 'State of Palestine'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Sudan [former] - \"Invalid Country Name: 'Sudan [former]'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Timor-Leste - \"Invalid Country Alpha-2 code: 'TL'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n",
      "Error processing country: Zanzibar - \"Invalid Country Name: 'Zanzibar'\"\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-12-daaffdd97f5e>:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_test['continent'] = df_test['country'].apply(get_continent)\n"
     ]
    }
   ],
   "source": [
    "df_test = df_removal\n",
    "df_test['continent'] = df_test['country'].apply(get_continent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d7ca6738",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\connor\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pandas\\core\\indexing.py:966: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self.obj[item] = s\n"
     ]
    }
   ],
   "source": [
    "# Inserting continent for some countries manually\n",
    "df_test.loc[df_test['country'] == 'State of Palestine', 'continent'] = 'Africa'\n",
    "df_test.loc[df_test['country'] == 'Kosovo', 'continent'] = 'Europe'\n",
    "df_test.loc[df_test['country'] == 'Timor-Leste', 'continent'] = 'Asia'\n",
    "df_test.loc[df_test['country'] == 'Saint Vincent & Grenadines', 'continent'] = 'North America'\n",
    "df_test.loc[df_test['country'] == 'Zanzibar', 'continent'] = 'Africa'\n",
    "\n",
    "# Replacing 'Sudan [former]' with Sudan before 2010\n",
    "df_test.loc[(df_test['country'] == 'Sudan [former]') & (df_test['year'] < 2010), 'country'] = 'Sudan' \n",
    "df_test = df_test[df_test['country'] != 'Sudan [former]']\n",
    "df_test.loc[df_test['country'] == 'Sudan', 'continent'] = 'Africa'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "eeb3db57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Series</th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1995</td>\n",
       "      <td>2,757</td>\n",
       "      <td>6,335</td>\n",
       "      <td>168</td>\n",
       "      <td>30.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2005</td>\n",
       "      <td>6,221</td>\n",
       "      <td>9,596</td>\n",
       "      <td>255</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2010</td>\n",
       "      <td>14,699</td>\n",
       "      <td>14,744</td>\n",
       "      <td>521</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2015</td>\n",
       "      <td>18,713</td>\n",
       "      <td>18,713</td>\n",
       "      <td>554</td>\n",
       "      <td>-1.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2019</td>\n",
       "      <td>18,904</td>\n",
       "      <td>20,510</td>\n",
       "      <td>501</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1480</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2010</td>\n",
       "      <td>12,042</td>\n",
       "      <td>14,100</td>\n",
       "      <td>938</td>\n",
       "      <td>19.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2015</td>\n",
       "      <td>19,963</td>\n",
       "      <td>19,963</td>\n",
       "      <td>1,410</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1482</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2019</td>\n",
       "      <td>22,595</td>\n",
       "      <td>20,705</td>\n",
       "      <td>1,472</td>\n",
       "      <td>-6.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2020</td>\n",
       "      <td>21,665</td>\n",
       "      <td>19,608</td>\n",
       "      <td>1,383</td>\n",
       "      <td>-5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1484</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2021</td>\n",
       "      <td>24,118</td>\n",
       "      <td>20,843</td>\n",
       "      <td>1,508</td>\n",
       "      <td>6.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1468 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series      country continent  year     gdp gdp_usa_price_2015 gdp_per_capita  \\\n",
       "0       Afghanistan      Asia  1995   2,757              6,335            168   \n",
       "1       Afghanistan      Asia  2005   6,221              9,596            255   \n",
       "2       Afghanistan      Asia  2010  14,699             14,744            521   \n",
       "3       Afghanistan      Asia  2015  18,713             18,713            554   \n",
       "4       Afghanistan      Asia  2019  18,904             20,510            501   \n",
       "...             ...       ...   ...     ...                ...            ...   \n",
       "1480       Zimbabwe    Africa  2010  12,042             14,100            938   \n",
       "1481       Zimbabwe    Africa  2015  19,963             19,963          1,410   \n",
       "1482       Zimbabwe    Africa  2019  22,595             20,705          1,472   \n",
       "1483       Zimbabwe    Africa  2020  21,665             19,608          1,383   \n",
       "1484       Zimbabwe    Africa  2021  24,118             20,843          1,508   \n",
       "\n",
       "Series gdp_growth_rate  \n",
       "0                 30.5  \n",
       "1                  7.5  \n",
       "2                  5.2  \n",
       "3                 -1.4  \n",
       "4                  3.9  \n",
       "...                ...  \n",
       "1480              19.7  \n",
       "1481               1.8  \n",
       "1482              -6.1  \n",
       "1483              -5.3  \n",
       "1484               6.3  \n",
       "\n",
       "[1468 rows x 7 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Re-arranging columns and producing final clean DataFrame\n",
    "\n",
    "column_order = [ 'country', 'continent', 'year', 'gdp', 'gdp_usa_price_2015', 'gdp_per_capita', 'gdp_growth_rate']\n",
    "\n",
    "df_gdp_clean = df_test\n",
    "df_gdp_clean = df_gdp_clean[column_order]\n",
    "\n",
    "df_gdp_clean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6d3efff3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Series\n",
       "country                object\n",
       "continent              object\n",
       "year                    int64\n",
       "gdp                   float64\n",
       "gdp_usa_price_2015    float64\n",
       "gdp_per_capita        float64\n",
       "gdp_growth_rate       float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ensuring correct column types and making gdp growth rate between -1 and 1\n",
    "\n",
    "df_gdp_clean['gdp_usa_price_2015'] = df_gdp_clean['gdp_usa_price_2015'].str.replace(',', '').astype(float)\n",
    "df_gdp_clean['gdp'] = df_gdp_clean['gdp'].str.replace(',', '').astype(float)\n",
    "df_gdp_clean['gdp_per_capita'] = df_gdp_clean['gdp_per_capita'].str.replace(',', '').astype(float)\n",
    "df_gdp_clean['gdp_growth_rate'] = df_gdp_clean['gdp_growth_rate'].str.replace(',', '').astype(float) / 100\n",
    "\n",
    "df_gdp_clean.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "04213570",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Series</th>\n",
       "      <th>country</th>\n",
       "      <th>continent</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>1995</td>\n",
       "      <td>2757.0</td>\n",
       "      <td>6335.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>0.305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2005</td>\n",
       "      <td>6221.0</td>\n",
       "      <td>9596.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>0.075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2010</td>\n",
       "      <td>14699.0</td>\n",
       "      <td>14744.0</td>\n",
       "      <td>521.0</td>\n",
       "      <td>0.052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2015</td>\n",
       "      <td>18713.0</td>\n",
       "      <td>18713.0</td>\n",
       "      <td>554.0</td>\n",
       "      <td>-0.014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>2019</td>\n",
       "      <td>18904.0</td>\n",
       "      <td>20510.0</td>\n",
       "      <td>501.0</td>\n",
       "      <td>0.039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1480</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2010</td>\n",
       "      <td>12042.0</td>\n",
       "      <td>14100.0</td>\n",
       "      <td>938.0</td>\n",
       "      <td>0.197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2015</td>\n",
       "      <td>19963.0</td>\n",
       "      <td>19963.0</td>\n",
       "      <td>1410.0</td>\n",
       "      <td>0.018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1482</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2019</td>\n",
       "      <td>22595.0</td>\n",
       "      <td>20705.0</td>\n",
       "      <td>1472.0</td>\n",
       "      <td>-0.061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2020</td>\n",
       "      <td>21665.0</td>\n",
       "      <td>19608.0</td>\n",
       "      <td>1383.0</td>\n",
       "      <td>-0.053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1484</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>2021</td>\n",
       "      <td>24118.0</td>\n",
       "      <td>20843.0</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>0.063</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1468 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series      country continent  year      gdp  gdp_usa_price_2015  \\\n",
       "0       Afghanistan      Asia  1995   2757.0              6335.0   \n",
       "1       Afghanistan      Asia  2005   6221.0              9596.0   \n",
       "2       Afghanistan      Asia  2010  14699.0             14744.0   \n",
       "3       Afghanistan      Asia  2015  18713.0             18713.0   \n",
       "4       Afghanistan      Asia  2019  18904.0             20510.0   \n",
       "...             ...       ...   ...      ...                 ...   \n",
       "1480       Zimbabwe    Africa  2010  12042.0             14100.0   \n",
       "1481       Zimbabwe    Africa  2015  19963.0             19963.0   \n",
       "1482       Zimbabwe    Africa  2019  22595.0             20705.0   \n",
       "1483       Zimbabwe    Africa  2020  21665.0             19608.0   \n",
       "1484       Zimbabwe    Africa  2021  24118.0             20843.0   \n",
       "\n",
       "Series  gdp_per_capita  gdp_growth_rate  \n",
       "0                168.0            0.305  \n",
       "1                255.0            0.075  \n",
       "2                521.0            0.052  \n",
       "3                554.0           -0.014  \n",
       "4                501.0            0.039  \n",
       "...                ...              ...  \n",
       "1480             938.0            0.197  \n",
       "1481            1410.0            0.018  \n",
       "1482            1472.0           -0.061  \n",
       "1483            1383.0           -0.053  \n",
       "1484            1508.0            0.063  \n",
       "\n",
       "[1468 rows x 7 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_gdp_clean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "730aef52",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Saving the DataFrame to csv\n",
    "\n",
    "df_gdp_clean.to_csv('E:\\\\Career\\\\Projects\\\\Data-Driven GDP Analysis\\\\dataframes\\\\gdp_df.csv', index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "b9c0d67f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Saving hiearchical dataframe for an easy to read clean excel file (probs wont be used for further analysis/model building)\n",
    "\n",
    "df_gdp_hier = df_gdp_clean.sort_values(by = ['continent', 'country']).set_index(['continent', 'country', 'year'])\n",
    "df_gdp_hier.to_excel('E:\\\\Career\\\\Projects\\\\Data-Driven GDP Analysis\\\\dataframes\\\\gdp_df_hierarchical.xlsx', index = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "2e69b6f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Series</th>\n",
       "      <th>gdp</th>\n",
       "      <th>gdp_usa_price_2015</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>gdp_growth_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>continent</th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Africa</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">Algeria</th>\n",
       "      <th>1995</th>\n",
       "      <td>41971.0</td>\n",
       "      <td>81507.0</td>\n",
       "      <td>1474.0</td>\n",
       "      <td>0.038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>103198.0</td>\n",
       "      <td>124381.0</td>\n",
       "      <td>3131.0</td>\n",
       "      <td>0.059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>161207.0</td>\n",
       "      <td>140977.0</td>\n",
       "      <td>4496.0</td>\n",
       "      <td>0.036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>165979.0</td>\n",
       "      <td>165979.0</td>\n",
       "      <td>4197.0</td>\n",
       "      <td>0.037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>171760.0</td>\n",
       "      <td>177355.0</td>\n",
       "      <td>4022.0</td>\n",
       "      <td>0.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">South America</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">Venezuela</th>\n",
       "      <th>2010</th>\n",
       "      <td>393806.0</td>\n",
       "      <td>342616.0</td>\n",
       "      <td>13714.0</td>\n",
       "      <td>-0.015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>344341.0</td>\n",
       "      <td>344341.0</td>\n",
       "      <td>11279.0</td>\n",
       "      <td>-0.062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>150165.0</td>\n",
       "      <td>139968.0</td>\n",
       "      <td>5183.0</td>\n",
       "      <td>-0.277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>106499.0</td>\n",
       "      <td>97988.0</td>\n",
       "      <td>3738.0</td>\n",
       "      <td>-0.300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>111813.0</td>\n",
       "      <td>98454.0</td>\n",
       "      <td>3965.0</td>\n",
       "      <td>0.005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1468 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Series                             gdp  gdp_usa_price_2015  gdp_per_capita  \\\n",
       "continent     country   year                                                 \n",
       "Africa        Algeria   1995   41971.0             81507.0          1474.0   \n",
       "                        2005  103198.0            124381.0          3131.0   \n",
       "                        2010  161207.0            140977.0          4496.0   \n",
       "                        2015  165979.0            165979.0          4197.0   \n",
       "                        2019  171760.0            177355.0          4022.0   \n",
       "...                                ...                 ...             ...   \n",
       "South America Venezuela 2010  393806.0            342616.0         13714.0   \n",
       "                        2015  344341.0            344341.0         11279.0   \n",
       "                        2019  150165.0            139968.0          5183.0   \n",
       "                        2020  106499.0             97988.0          3738.0   \n",
       "                        2021  111813.0             98454.0          3965.0   \n",
       "\n",
       "Series                        gdp_growth_rate  \n",
       "continent     country   year                   \n",
       "Africa        Algeria   1995            0.038  \n",
       "                        2005            0.059  \n",
       "                        2010            0.036  \n",
       "                        2015            0.037  \n",
       "                        2019            0.010  \n",
       "...                                       ...  \n",
       "South America Venezuela 2010           -0.015  \n",
       "                        2015           -0.062  \n",
       "                        2019           -0.277  \n",
       "                        2020           -0.300  \n",
       "                        2021            0.005  \n",
       "\n",
       "[1468 rows x 4 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_gdp_hier"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "position": {
    "height": "144.844px",
    "left": "908px",
    "right": "20px",
    "top": "119px",
    "width": "350px"
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
